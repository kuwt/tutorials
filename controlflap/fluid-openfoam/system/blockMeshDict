FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

x0 0.;
x1 1.;
x2 3.;
x3 4.;

y0 0.;
y1 1.;
y2 1.25;
y3 1.5;

z0 0;
z1 1;

vertices
(
    ($x0 $y0 $z0 )         // 0
    ($x1 $y0 $z0 )         // 1
    ($x2 $y0 $z0 )         // 2
    ($x3 $y0 $z0 )         // 3

    ($x0 $y1 $z0 )         // 4
    ($x1 $y1 $z0 )         // 5
    ($x2 $y1 $z0 )         // 6
    ($x3 $y1 $z0 )         // 7

    ($x0 $y2 $z0 )         // 8
    ($x1 $y2 $z0 )         // 9
    ($x2 $y2 $z0 )         // 10
    ($x3 $y2 $z0 )         // 11

    ($x0 $y3 $z0 )         // 12
    ($x1 $y3 $z0 )         // 13
    ($x2 $y3 $z0 )         // 14
    ($x3 $y3 $z0 )         // 15

    ($x0 $y0 $z1 )         // 16
    ($x1 $y0 $z1 )         // 17
    ($x2 $y0 $z1 )         // 18
    ($x3 $y0 $z1 )         // 19

    ($x0 $y1 $z1 )         // 20
    ($x1 $y1 $z1 )         // 21
    ($x2 $y1 $z1 )         // 22
    ($x3 $y1 $z1 )         // 23

    ($x0 $y2 $z1 )         // 24
    ($x1 $y2 $z1 )         // 25
    ($x2 $y2 $z1 )         // 26
    ($x3 $y2 $z1 )         // 27

    ($x0 $y3 $z1 )         // 28
    ($x1 $y3 $z1 )         // 29
    ($x2 $y3 $z1 )         // 30
    ($x3 $y3 $z1 )         // 31

);

// Grading
h1 20;
h2 40;
v1 20;
v2 5;

blocks
(
    hex (   0   1   5   4   16  17  21  20  )
    ($h1 $v1 1 )
    simpleGrading (1 1 1)

    hex (   1   2   6   5   17  18  22  21  )
    ($h2 $v1 1)
    simpleGrading (1 1 1)

    hex (   4   5   9   8   20  21  25  24  )
    ($h1 $v2 1)
    simpleGrading (1 1 1)

    hex (   8   9   13  12   24  25  29  28  )
    ($h1 $v2 1)
    simpleGrading (1 1 1)

    hex (   9   10   14  13  25  26  30  29  )
    ($h2 $v2 1 )
    simpleGrading (1 1 1)

    hex (   10   11   15  14  26  27  31  30  )
    ($h1 $v2 1 )
    simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (  0   4   20  16  )
            (  4   8   24  20  )
            (  8   12   28  24  )
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (   11   15   31  27  )
        );
    }
    flap
    {
        type wall;
        faces
        (
            (   5   9   25  21  )
            (   9   10   26  25  )
            (   5   6   22  21  )
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (   12   13   29  28  )
            (   13   14   30  29  )
            (   14   15   31  30  )
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (   0   1   17  16  )
            (   1   2   18  17  )
        );
    }
    rightWall
    {
        type wall;
        faces
        (
            (   2   6   22  18  )
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (   0   1   5   4   )
            (   1   2   6   5   )
            (   4   5   9   8   )
            (   8   9   13  12  )
            (   9   10  14  13  )
            (   10  11  15  14  )
            (   16  17  21  20  )
            (   17  18  22  21  )
            (   20  21  25  24  )
            (   24  25  29  28  )
            (   25  26  30  29  )
            (   26  27  31  30  )                        
        );
    }
);

// ************************************************************************* //
